
				import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.regex.Pattern;

				import org.apache.commons.lang.StringUtils;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

import com.sun.org.apache.xerces.internal.impl.xs.identity.Selector.Matcher;



						public class TeamGoMapper extends Mapper<Object, Text, Text, IntWritable> { 
							private final IntWritable one = new IntWritable(1);
							private Text data = new Text();
						    int i=0;
						    
							public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
								// Format per tweet is id;date;hashtags;tweet;
								
							/*	String dump = value.toString();
								if(StringUtils.ordinalIndexOf(dump,";",4)>-1){
									int startIndex = StringUtils.ordinalIndexOf(dump,";",2) + 1;
									int lstIndex = StringUtils.ordinalIndexOf(dump,";",3);
									String hastag = dump.substring(startIndex,lstIndex);
									
									hastag=hastag.toLowerCase();
									
									//data.set(hastag);
									//context.write(data, one);
									//split 3d part in hashtags
									String[] hashtags = hastag.split(" ");
									
									String p1="team\\w*";
									String p2="go\\w*";
									for (int i=0;i<hashtags.length; i++)
									{
										boolean matches1 = Pattern.matches(p1, hashtags[i]);
										boolean matches2 = Pattern.matches(p2, hashtags[i]);
										if (matches1==true) 
											{
											hashtags[i]=hashtags[i].substring(4,hashtags[i].length());
											
											}
										else{
											if (matches2==true) 
											{
											hashtags[i]=hashtags[i].substring(2,hashtags[i].length());
											
											}
											else
											{
											hashtags[i]="";
											}
									
											//data.set(hashtags[i]);
											//context.write(data, one);
										}
									}
								*/	
									 
									/*try (BufferedReader br = new BufferedReader(new FileReader("src/1.txt"));)
									{
							 
										String sCurrentLine;
							 
										while ((sCurrentLine = br.readLine()) != null) {
											//sCurrentLine = sCurrentLine.toLowerCase();
											//String[] parts = sCurrentLine.split(",");
											//parts[0]=parts[0].replaceAll(" ", "");
											
											/*if ((hashtags[i]==parts[0]) || (hashtags[i]==parts[1]))
											{
												data.set(hashtags[i]);
												context.write(data, one);
											}
											
											//data.set(parts[0]);
											//context.write(data, one);
											data.set(sCurrentLine);
											context.write(data, one);
											}
											
										}
							 
									 catch (IOException e) {
										e.printStackTrace();
									} 
							 
									
									
										}
									}
									
									*/
						
						
						
						
							 
							ArrayList <String[]> countryInfo = new ArrayList <String[]>();
        BufferedReader br = new BufferedReader(new FileReader("fullAndShort.csv"));
        String line = null;
        try {
            // we discard the header row
            br.readLine();
            while ((line = br.readLine()) != null) {
               
                // Fields are: 0:CountryName 1:Code3 2:Code3  
                //List with the values
                  data.set(line);
		context.write(data, one);          
                

            }
            br.close();
        } catch (IOException e1) {
        }
						 
							
							
							data.set("1");
							context.write(data, one);
							
						  }
						 
						
						
				
				
				
				
					
						}
					
					
					
			
					
					
				
				
			

			



		

		
		
